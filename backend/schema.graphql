scalar DateTime

schema {
    query: Query
    mutation: Mutation
}

type Client {
    id: ID!
    name: String!
    taxId: String
    streetWithNumber: String
    zipCode: String
    city: String
    createdAt: DateTime!
    projects: [Project!]
}

type Project {
    id: ID!
    name: String!
    createdAt: DateTime!
    tasks: [Task!]
}

type Task {
    id: ID!,
    name: String,
    createdAt: DateTime!
}

type Query {
    clients(offset: Int = 0, limit: Int = 10): [Client!]
    client(id: ID!): Client
}

input CreateClientInput {
    name: String!
    taxId: String
    streetWithNumber: String
    zipCode: String
    city: String
}

input AddProjectInput {
    clientId: ID!
    name: String!
}

input AddTaskInput {
    projectId: ID!
    name: String!
}

"""TODO handle validation errors"""
type Mutation {
    createClient(input: CreateClientInput!): Client!
    addProject(input: AddProjectInput!): Project
    addTask(input: AddTaskInput!): Task
}
