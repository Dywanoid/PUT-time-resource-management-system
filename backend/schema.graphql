scalar DateTime

schema {
    query: Query
    mutation: Mutation
}

type Client {
    id: ID!
    name: String!
    taxId: String
    streetWithNumber: String
    zipCode: String
    city: String
    createdAt: DateTime!
    projects: [Project!]
}

type Project {
    id: ID!
    name: String!
    createdAt: DateTime!
    tasks: [Task!]
}

type Task {
    id: ID!,
    name: String,
    createdAt: DateTime!
}

type Team {
    id: ID!
    name: String!
    description: String
    archived: Boolean!
    createdAt: DateTime!
}

type Query {
    clients(offset: Int = 0, limit: Int = 10): [Client!]
    client(id: ID!): Client
    teams(includeArchived: Boolean = false, offset: Int = 0, limit: Int = 25): [Team!]
    team(id: ID!): Team!
}

input CreateClientInput {
    name: String!
    taxId: String
    streetWithNumber: String
    zipCode: String
    city: String
}

input AddProjectInput {
    clientId: ID!
    name: String!
}

input AddTaskInput {
    projectId: ID!
    name: String!
}

input AddTeamInput {
    name: String!
    description: String
}

input UpdateTeamInput {
    teamId: ID!
    name: String!
    description: String
}

input ArchiveTeamInput {
    teamId: ID!
}

input UnarchiveTeamInput {
    teamId: ID!
}

"""TODO handle validation errors"""
type Mutation {
    createClient(input: CreateClientInput!): Client!
    addProject(input: AddProjectInput!): Project
    addTask(input: AddTaskInput!): Task
    addTeam(input: AddTeamInput!): Team!
    updateTeam(input: UpdateTeamInput!): Team!
    archiveTeam(input: ArchiveTeamInput!): Team!
    unarchiveTeam(input: UnarchiveTeamInput!): Team!
}
