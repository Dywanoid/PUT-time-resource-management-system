"""Initial data

Revision ID: b8ed3117e868
Revises: d2fda22f67ca
Create Date: 2021-04-25 21:59:40.427204

"""
from alembic import op
import sqlalchemy as sa
from datetime import datetime
from sqlalchemy.sql import table, column
from sqlalchemy import String, Integer, DateTime, Boolean

# revision identifiers, used by Alembic.
revision = 'b8ed3117e868'
down_revision = 'd2fda22f67ca'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    client = table('client',
                   column('id', Integer),
                   column('name', String),
                   column('tax_id', String),
                   column('street_with_number', String),
                   column('zip_code', String),
                   column('city', String),
                   column('created_at', DateTime)
                   )

    project = table('project',
                    column('id', Integer),
                    column('client_id', Integer),
                    column('name', String),
                    column('archived', Boolean),
                    column('created_at', DateTime)
                    )

    task = table('task',
                 column('id', Integer),
                 column('project_id', Integer),
                 column('name', String),
                 column('archived', Boolean),
                 column('created_at', DateTime)
                 )

    # ### first client data ###
    conn = op.get_bind()
    [c1] = conn.execute(client.insert().returning(client.c.id).values(
        {'name': 'Jeronimo Martins', 'tax_id': 'PL7791011327', 'street_with_number': 'ul. Żniwna 5',
            'zip_code': '62-025', 'city': 'Kostrzyn', 'created_at': datetime.now()}
    )).fetchone()

    [p1] = conn.execute(project.insert().returning(project.c.id).values(
        {'name': 'Online Shop', 'client_id': c1,
            'archived': False, 'created_at': datetime.now()}
    )).fetchone()

    op.bulk_insert(task, [
        {'name': 'Maintanance', 'project_id': p1,
            'archived': False, 'created_at': datetime.now()},
        {'name': 'Development', 'project_id': p1,
            'archived': False, 'created_at': datetime.now()}
    ])

    # ### second client data ###
    [c2] = conn.execute(client.insert().returning(client.c.id).values(
        {'name': 'Volkswagen Poznań', 'tax_id': 'PL7820032965', 'street_with_number': 'ul. Warszawska 349',
            'zip_code': '61-060', 'city': 'Poznań', 'created_at': datetime.now()}
    )).fetchone()

    [p2] = conn.execute(project.insert().returning(project.c.id).values(
        {'name': 'Assembly Line Automation', 'client_id': c2,
            'archived': False, 'created_at': datetime.now()}
    )).fetchone()

    [p3] = conn.execute(project.insert().returning(project.c.id).values(
        {'name': 'Smart Manufacturing', 'client_id': c2,
            'archived': False, 'created_at': datetime.now()}
    )).fetchone()

    op.bulk_insert(task, [
        {'name': 'Gathering requirements',
            'project_id': p2, 'archived': False, 'created_at': datetime.now()},
        {'name': 'Monitoring', 'project_id': p3,
            'archived': False, 'created_at': datetime.now()},
        {'name': 'Reporting', 'project_id': p3,
            'archived': False, 'created_at': datetime.now()}
    ])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    client = table('client')
    project = table('project')
    task = table('task')
    op.execute(task.delete())
    op.execute(project.delete())
    op.execute(client.delete())
    # ### end Alembic commands ###
